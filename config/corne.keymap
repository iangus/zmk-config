/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/led/led.h>

&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;

		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "default";
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENTR |
//                    | GUI | LWR | CTL |   | SPC | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LGUI &mo 1 &kp LCTRL   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        label = "lower";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | LFT | RGT | UP  | DWN |      |
// | SHFT |     |     |     |     |     |   |     |     |     | HOME| END |      |
//                    | GUI |     | CTL |   | SPC |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8    &kp N9    &kp N0   &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &kp LEFT &kp RIGHT &kp UP    &kp DOWN &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans    &trans   &kp HOME  &kp END  &trans
                          	        &kp LGUI     &trans       &trans         &trans   &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "raise";
// -----------------------------------------------------------------------------------------
// |   `  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
// |      |     |     |     |     |     |   |     |  -  |     |  [  |  ]  |  \  |
// |      |     |     |     |     |     |   |     |  =  |     |  {  |  }  | ENTR|
//                    | GUI |     | CTL |   |     | SPC |     | ALT |
                        bindings = <
   &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &trans    &trans   &trans &trans   &trans   &trans      &trans    &kp MINUS &trans          &kp LBKT &kp RBKT &kp BSLH
   &trans    &trans   &trans &trans   &trans   &trans      &trans    &kp EQUAL &trans          &kp LBRC &kp RBRC &kp ENTER
                    	     &kp LGUI &trans   &trans   &trans   &trans    &kp RALT
                        >;
                };
        };
};
